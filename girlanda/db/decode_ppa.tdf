--lpm_decode CBX_DECLARE_ALL_CONNECTED_PORTS="OFF" DEVICE_FAMILY="Cyclone II" LPM_DECODES=16 LPM_WIDTH=4 data enable eq
--VERSION_BEGIN 13.0 cbx_cycloneii 2013:04:24:18:08:47:SJ cbx_lpm_add_sub 2013:04:24:18:08:47:SJ cbx_lpm_compare 2013:04:24:18:08:47:SJ cbx_lpm_decode 2013:04:24:18:08:47:SJ cbx_mgl 2013:04:24:18:11:10:SJ cbx_stratix 2013:04:24:18:08:47:SJ cbx_stratixii 2013:04:24:18:08:47:SJ  VERSION_END


-- Copyright (C) 1991-2013 Altera Corporation
--  Your use of Altera Corporation's design tools, logic functions 
--  and other software and tools, and its AMPP partner logic 
--  functions, and any output files from any of the foregoing 
--  (including device programming or simulation files), and any 
--  associated documentation or information are expressly subject 
--  to the terms and conditions of the Altera Program License 
--  Subscription Agreement, Altera MegaCore Function License 
--  Agreement, or other applicable license agreement, including, 
--  without limitation, that your use is for the sole purpose of 
--  programming logic devices manufactured by Altera and sold by 
--  Altera or its authorized distributors.  Please refer to the 
--  applicable agreement for further details.



--synthesis_resources = lut 18 
SUBDESIGN decode_ppa
( 
	data[3..0]	:	input;
	enable	:	input;
	eq[15..0]	:	output;
) 
VARIABLE 
	data_wire[3..0]	: WIRE;
	enable_wire	: WIRE;
	eq_node[15..0]	: WIRE;
	eq_wire[15..0]	: WIRE;
	w_anode9257w[1..0]	: WIRE;
	w_anode9266w[3..0]	: WIRE;
	w_anode9283w[3..0]	: WIRE;
	w_anode9293w[3..0]	: WIRE;
	w_anode9303w[3..0]	: WIRE;
	w_anode9313w[3..0]	: WIRE;
	w_anode9323w[3..0]	: WIRE;
	w_anode9333w[3..0]	: WIRE;
	w_anode9343w[3..0]	: WIRE;
	w_anode9355w[1..0]	: WIRE;
	w_anode9362w[3..0]	: WIRE;
	w_anode9373w[3..0]	: WIRE;
	w_anode9383w[3..0]	: WIRE;
	w_anode9393w[3..0]	: WIRE;
	w_anode9403w[3..0]	: WIRE;
	w_anode9413w[3..0]	: WIRE;
	w_anode9423w[3..0]	: WIRE;
	w_anode9433w[3..0]	: WIRE;
	w_data9255w[2..0]	: WIRE;

BEGIN 
	data_wire[] = data[];
	enable_wire = enable;
	eq[] = eq_node[];
	eq_node[15..0] = eq_wire[15..0];
	eq_wire[] = ( ( w_anode9433w[3..3], w_anode9423w[3..3], w_anode9413w[3..3], w_anode9403w[3..3], w_anode9393w[3..3], w_anode9383w[3..3], w_anode9373w[3..3], w_anode9362w[3..3]), ( w_anode9343w[3..3], w_anode9333w[3..3], w_anode9323w[3..3], w_anode9313w[3..3], w_anode9303w[3..3], w_anode9293w[3..3], w_anode9283w[3..3], w_anode9266w[3..3]));
	w_anode9257w[] = ( (w_anode9257w[0..0] & (! data_wire[3..3])), enable_wire);
	w_anode9266w[] = ( (w_anode9266w[2..2] & (! w_data9255w[2..2])), (w_anode9266w[1..1] & (! w_data9255w[1..1])), (w_anode9266w[0..0] & (! w_data9255w[0..0])), w_anode9257w[1..1]);
	w_anode9283w[] = ( (w_anode9283w[2..2] & (! w_data9255w[2..2])), (w_anode9283w[1..1] & (! w_data9255w[1..1])), (w_anode9283w[0..0] & w_data9255w[0..0]), w_anode9257w[1..1]);
	w_anode9293w[] = ( (w_anode9293w[2..2] & (! w_data9255w[2..2])), (w_anode9293w[1..1] & w_data9255w[1..1]), (w_anode9293w[0..0] & (! w_data9255w[0..0])), w_anode9257w[1..1]);
	w_anode9303w[] = ( (w_anode9303w[2..2] & (! w_data9255w[2..2])), (w_anode9303w[1..1] & w_data9255w[1..1]), (w_anode9303w[0..0] & w_data9255w[0..0]), w_anode9257w[1..1]);
	w_anode9313w[] = ( (w_anode9313w[2..2] & w_data9255w[2..2]), (w_anode9313w[1..1] & (! w_data9255w[1..1])), (w_anode9313w[0..0] & (! w_data9255w[0..0])), w_anode9257w[1..1]);
	w_anode9323w[] = ( (w_anode9323w[2..2] & w_data9255w[2..2]), (w_anode9323w[1..1] & (! w_data9255w[1..1])), (w_anode9323w[0..0] & w_data9255w[0..0]), w_anode9257w[1..1]);
	w_anode9333w[] = ( (w_anode9333w[2..2] & w_data9255w[2..2]), (w_anode9333w[1..1] & w_data9255w[1..1]), (w_anode9333w[0..0] & (! w_data9255w[0..0])), w_anode9257w[1..1]);
	w_anode9343w[] = ( (w_anode9343w[2..2] & w_data9255w[2..2]), (w_anode9343w[1..1] & w_data9255w[1..1]), (w_anode9343w[0..0] & w_data9255w[0..0]), w_anode9257w[1..1]);
	w_anode9355w[] = ( (w_anode9355w[0..0] & data_wire[3..3]), enable_wire);
	w_anode9362w[] = ( (w_anode9362w[2..2] & (! w_data9255w[2..2])), (w_anode9362w[1..1] & (! w_data9255w[1..1])), (w_anode9362w[0..0] & (! w_data9255w[0..0])), w_anode9355w[1..1]);
	w_anode9373w[] = ( (w_anode9373w[2..2] & (! w_data9255w[2..2])), (w_anode9373w[1..1] & (! w_data9255w[1..1])), (w_anode9373w[0..0] & w_data9255w[0..0]), w_anode9355w[1..1]);
	w_anode9383w[] = ( (w_anode9383w[2..2] & (! w_data9255w[2..2])), (w_anode9383w[1..1] & w_data9255w[1..1]), (w_anode9383w[0..0] & (! w_data9255w[0..0])), w_anode9355w[1..1]);
	w_anode9393w[] = ( (w_anode9393w[2..2] & (! w_data9255w[2..2])), (w_anode9393w[1..1] & w_data9255w[1..1]), (w_anode9393w[0..0] & w_data9255w[0..0]), w_anode9355w[1..1]);
	w_anode9403w[] = ( (w_anode9403w[2..2] & w_data9255w[2..2]), (w_anode9403w[1..1] & (! w_data9255w[1..1])), (w_anode9403w[0..0] & (! w_data9255w[0..0])), w_anode9355w[1..1]);
	w_anode9413w[] = ( (w_anode9413w[2..2] & w_data9255w[2..2]), (w_anode9413w[1..1] & (! w_data9255w[1..1])), (w_anode9413w[0..0] & w_data9255w[0..0]), w_anode9355w[1..1]);
	w_anode9423w[] = ( (w_anode9423w[2..2] & w_data9255w[2..2]), (w_anode9423w[1..1] & w_data9255w[1..1]), (w_anode9423w[0..0] & (! w_data9255w[0..0])), w_anode9355w[1..1]);
	w_anode9433w[] = ( (w_anode9433w[2..2] & w_data9255w[2..2]), (w_anode9433w[1..1] & w_data9255w[1..1]), (w_anode9433w[0..0] & w_data9255w[0..0]), w_anode9355w[1..1]);
	w_data9255w[2..0] = data_wire[2..0];
END;
--VALID FILE
